/**
 * angular-recaptcha build:2016-10-04 
 * https://github.com/benohead/angular-recaptcha 
 * Copyright (c) 2016 VividCortex 
**/

!function(a){"use strict";a.module("vcRecaptcha",[])}(angular),function(a){"use strict";function b(){throw new Error('You need to set the "key" attribute to your public reCaptcha key. If you don\'t have a key, please get one from https://www.google.com/recaptcha/admin/create')}var c=a.module("vcRecaptcha");c.provider("vcRecaptchaService",function(){var a=this,c={};a.setDefaults=function(a){angular.copy(c,a)},a.setSiteKey=function(a){c.key=a},a.setTheme=function(a){c.theme=a},a.setStoken=function(a){c.stoken=a},a.setSize=function(a){c.size=a},a.setType=function(a){c.type=a},a.setOnLoadFunctionName=function(b){a.onLoadFunctionName=b},a.$get=["$rootScope","$window","$q","$log","$interval",function(a,d,e,f,g){function l(){return e.when(i).then(function(){return f.debug("Returning reCatpcha window object"),h=d.grecaptcha})}function m(){if(!h)throw new Error("reCaptcha has not been loaded yet.")}function n(a){function k(){f.debug("reCaptcha script loaded, waiting for window.grecaptcha");var a=0,c=g(function(){a++,d.grecaptcha?(g.cancel(c),f.debug("window.grecaptcha exists!"),i=!0,b.resolve(h)):a>=j&&(g.cancel(c),f.error("TIMEOUT - waiting for window.grecaptcha"))},250)}i=!1;var b=e.defer(),c=document.getElementsByTagName("head")[0],h=document.createElement("script");return h.type="text/javascript",h.src=a,h.onreadystatechange=k,h.onload=k,c.appendChild(h),b.promise}function o(a,d){return d.sitekey=d.key||c.key,d.theme=d.theme||c.theme,d.stoken=d.stoken||c.stoken,d.size=d.size||c.size,d.type=d.type||c.type,d.sitekey&&40===d.sitekey.length||b(),l().then(function(b){return m(),b.render(a,d)})}function p(b){m(),h.reset(b),a.$broadcast("reCaptchaReset",b)}function q(a){return m(),h.getResponse(a)}var h=null,i=!1,j=40;return{create:o,reload:p,getResponse:q,loadScript:n}}]}),c.directive("vcRecaptcha",["$document","$timeout","$log","vcRecaptchaService",function(a,b,c,d){return{restrict:"A",require:"?^^form",scope:{response:"=?ngModel",key:"=?",stoken:"=?",theme:"=?",size:"=?",type:"=?",tabindex:"=?",required:"=?",onCreate:"&",onSuccess:"&",onExpire:"&",language:"="},link:function(a,e,f,g){function h(c){var g="https://www.google.com/recaptcha/api.js?onload=onloadCallback&render=explicit&hl="+c;d.loadScript(g).then(function(c){a.script=c;var g=function(c){b(function(){a.response=c,k(),a.onSuccess({response:c,widgetId:a.widgetId})})};d.create(e[0],{callback:g,key:a.key,stoken:a.stoken||f.stoken||null,theme:a.theme||f.theme||null,type:a.type||f.type||null,tabindex:a.tabindex||f.tabindex||null,size:a.size||f.size||null,"expired-callback":j}).then(function(b){k(),a.widgetId=b,a.onCreate({widgetId:b}),a.$on("$destroy",i),a.$on("reCaptchaReset",function(c){(angular.isUndefined(c)||b===c)&&(a.response="",k())})}),angular.isUndefined(a.language)&&a.removeLanguageListener()})}function i(){g&&g.$setValidity("recaptcha",null),l()}function j(){a.response="",k(),a.onExpire({widgetId:a.widgetId})}function k(){g&&g.$setValidity("recaptcha",a.required===!1?null:Boolean(a.response))}function l(){e.empty(),a.script&&angular.element(a.script).remove()}a.widgetId=null,a.script=null,a.removeLanguageListener=null,g&&angular.isDefined(f.required)&&a.$watch("required",k),a.removeLanguageListener=a.$watch("language",function(a){a?c.debug("Language changed to: "+a+" - Refreshing reCaptcha"):(c.warn("Language not defined! Using english as fallback"),a="en"),i(),h(a)})}}}])}(angular);